<% provide(:page_title, "Documentation") %>
<section class="section">

	<div class="container is-size-4">
		<div class="title is-3">Documentation</div>
		<p class="has-text-primary">0. How this works: you give this site a script which can simulate the control of your smart device. It runs the script for you when you hit the buttons in the control center of this site.</p>
		<br />
		<p>1. You need to figure out how to control your smart device first by your self, write the command to simulate this procedure in whatever language you like and put the code in a single .py file or .sh file or .c .rb .rs file, then put them on any machine you like.</p>
		<br />
		<p>2. Sign up a user, create a device in the web page.</p>
		<br />
		<p>3. When creating the new device, fill in the file in step 1 in the form On Command / Off Command, it will be called like you are running it in the shell. For example, your file is at "/User/bob/scripts/Turn_On.py", then you should fill the form like "python /User/bob/scripts/Turn_On.py" (don't put the quotes, just write the command as if you are writing them in the shell).</p>
		<br />
		<p>4. In the `device_type` field, if you fill it with any of "Camera, Alarm, Light, Gate", it will have a different appearance in the web page.</p>
		<br />
		<p>5. If you are using a camera, this app loads the photo generated in the folder `/public/assets/images/captured.jpg`.</p>
		<br />
		<p>6. If the script file is on another machine, you might want to ssh to it, make sure to pass your public ssh keyfile to that remote machine so you don't have to input your password while calling the script with ssh through this site.</p>
		<br />
		<p class="has-text-danger">7. Don't write 'sudo rm -rf' kind of commands, it's not fun.</p>

	</div>
</section>